{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akshat\\\\Desktop\\\\React-Brew-Story\\\\brewstory\\\\src\\\\auth\\\\ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProtectedRoute({\n  children\n}) {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    let user = localStorage.getItem('brewUser');\n    let checkUser = JSON.parse(user);\n    try {\n      if (!checkUser) {\n        setIsLoggedIn(false);\n        navigate('/');\n      } else {\n        setIsLoggedIn(true);\n      }\n    } catch (error) {\n      throw error;\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoggedIn && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(ProtectedRoute, \"JNNAVcL03XZIkY/1G2PDQyJFRpk=\", false, function () {\n  return [useNavigate];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","isLoggedIn","setIsLoggedIn","navigate","user","localStorage","getItem","checkUser","JSON","parse","error","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Akshat/Desktop/React-Brew-Story/brewstory/src/auth/ProtectedRoute.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction ProtectedRoute( { children } ) {\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        let user = localStorage.getItem('brewUser')\r\n        let checkUser = JSON.parse(user);\r\n\r\n        try {\r\n            if (!checkUser) {\r\n                setIsLoggedIn(false);\r\n                navigate('/')\r\n            } else {\r\n              setIsLoggedIn(true);  \r\n            }\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n      \r\n      \r\n    }, [])\r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n            {isLoggedIn && children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProtectedRoute;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,cAAcA,CAAE;EAAEC;AAAS,CAAC,EAAG;EAAAC,EAAA;EAEpC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACZ,IAAIW,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAC3C,IAAIC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACL,IAAI,CAAC;IAEhC,IAAI;MACA,IAAI,CAACG,SAAS,EAAE;QACZL,aAAa,CAAC,KAAK,CAAC;QACpBC,QAAQ,CAAC,GAAG,CAAC;MACjB,CAAC,MAAM;QACLD,aAAa,CAAC,IAAI,CAAC;MACrB;IACJ,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EAGJ,CAAC,EAAE,EAAE,CAAC;EAIN,oBACIb,OAAA;IAAAE,QAAA,EACKE,UAAU,IAAIF;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEd;AAACd,EAAA,CA9BQF,cAAc;EAAA,QAGFH,WAAW;AAAA;AAAAoB,EAAA,GAHvBjB,cAAc;AAgCvB,eAAeA,cAAc;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}