{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akshat\\\\Desktop\\\\React-Brew-Story\\\\brewstory\\\\src\\\\auth\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = useContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [formData, setFormData] = useState(\"\");\n  const [user, setUser] = useState('');\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n\n  //register code\n  const login = async e => {\n    e.preventDefault();\n    const config = {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    };\n    let checkUser = await fetch(`http://localhost:5000/user?email=${formData.email}`, {\n      method: \"GET\"\n    });\n    if (checkUser.ok) {\n      let user = await checkUser.json();\n      if (user.length > 0) {\n        setMessage(\"User Already Exist\");\n      } else {\n        let response = await fetch(`http://localhost:5000/user`, config);\n        if (response.status === 201) {\n          let user = await response.json();\n          localStorage.setItem(\"brewUser\", JSON.stringify(user));\n          setTimeout(() => {\n            navigate(\"/account/login\");\n          }, 1500);\n          setMessage(\"User Registered Succefully\");\n        } else {\n          setMessage(\"Something went wrong\");\n        }\n      }\n    } else {\n      setMessage(\"Something went wrong, Please try again\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      login,\n      register,\n      setMessage,\n      message\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 3\n  }, this);\n};\n_s(AuthProvider, \"0oJfAjWTbNL2BREbc7y+Djir74E=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["useContext","useState","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","formData","setFormData","user","setUser","message","setMessage","navigate","login","e","preventDefault","config","method","headers","body","JSON","stringify","checkUser","fetch","email","ok","json","length","response","status","localStorage","setItem","setTimeout","Provider","value","register","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Akshat/Desktop/React-Brew-Story/brewstory/src/auth/AuthContext.js"],"sourcesContent":["import { useContext, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst AuthContext = useContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n\r\n    const [formData, setFormData] = useState(\"\");\r\n    const [user, setUser] = useState('');\r\n    const [message, setMessage] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n\r\n    //register code\r\n    const login = async (e) => {\r\n        e.preventDefault();\r\n    \r\n        const config = {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(formData),\r\n        };\r\n    \r\n        let checkUser = await fetch(\r\n          `http://localhost:5000/user?email=${formData.email}`,\r\n          { method: \"GET\" }\r\n        );\r\n    \r\n        if (checkUser.ok) {\r\n          let user = await checkUser.json();\r\n          if (user.length > 0) {\r\n            setMessage(\"User Already Exist\");\r\n          } else {\r\n            let response = await fetch(`http://localhost:5000/user`, config);\r\n    \r\n            if (response.status === 201) {\r\n              let user = await response.json();\r\n    \r\n              localStorage.setItem(\"brewUser\", JSON.stringify(user));\r\n    \r\n              setTimeout(() => {\r\n                navigate(\"/account/login\");\r\n              }, 1500);\r\n    \r\n              setMessage(\"User Registered Succefully\");\r\n            } else {\r\n              setMessage(\"Something went wrong\");\r\n            }\r\n          }\r\n        } else {\r\n          setMessage(\"Something went wrong, Please try again\");\r\n        }\r\n      };\r\n\r\nreturn (\r\n  <AuthContext.Provider\r\n    value={{\r\n      login,\r\n      register,\r\n      setMessage,\r\n      message,\r\n    }}\r\n  >\r\n    {children}\r\n  </AuthContext.Provider>\r\n);\r\n};\r\n\r\nexport default AuthContext;"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,GAAGL,UAAU,CAAC,CAAC;AAEhC,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAE1C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMc,QAAQ,GAAGb,WAAW,CAAC,CAAC;;EAG9B;EACA,MAAMc,KAAK,GAAG,MAAOC,CAAC,IAAK;IACvBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,MAAM,GAAG;MACbC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACf,QAAQ;IAC/B,CAAC;IAED,IAAIgB,SAAS,GAAG,MAAMC,KAAK,CACxB,oCAAmCjB,QAAQ,CAACkB,KAAM,EAAC,EACpD;MAAEP,MAAM,EAAE;IAAM,CAClB,CAAC;IAED,IAAIK,SAAS,CAACG,EAAE,EAAE;MAChB,IAAIjB,IAAI,GAAG,MAAMc,SAAS,CAACI,IAAI,CAAC,CAAC;MACjC,IAAIlB,IAAI,CAACmB,MAAM,GAAG,CAAC,EAAE;QACnBhB,UAAU,CAAC,oBAAoB,CAAC;MAClC,CAAC,MAAM;QACL,IAAIiB,QAAQ,GAAG,MAAML,KAAK,CAAE,4BAA2B,EAAEP,MAAM,CAAC;QAEhE,IAAIY,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;UAC3B,IAAIrB,IAAI,GAAG,MAAMoB,QAAQ,CAACF,IAAI,CAAC,CAAC;UAEhCI,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEX,IAAI,CAACC,SAAS,CAACb,IAAI,CAAC,CAAC;UAEtDwB,UAAU,CAAC,MAAM;YACfpB,QAAQ,CAAC,gBAAgB,CAAC;UAC5B,CAAC,EAAE,IAAI,CAAC;UAERD,UAAU,CAAC,4BAA4B,CAAC;QAC1C,CAAC,MAAM;UACLA,UAAU,CAAC,sBAAsB,CAAC;QACpC;MACF;IACF,CAAC,MAAM;MACLA,UAAU,CAAC,wCAAwC,CAAC;IACtD;EACF,CAAC;EAEP,oBACEV,OAAA,CAACC,WAAW,CAAC+B,QAAQ;IACnBC,KAAK,EAAE;MACLrB,KAAK;MACLsB,QAAQ;MACRxB,UAAU;MACVD;IACF,CAAE;IAAAN,QAAA,EAEDA;EAAQ;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEzB,CAAC;AAAClC,EAAA,CA/DWF,YAAY;EAAA,QAKJJ,WAAW;AAAA;AAAAyC,EAAA,GALnBrC,YAAY;AAiEzB,eAAeD,WAAW;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}